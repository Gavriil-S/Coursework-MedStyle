
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)  
	Дата = ТекущаяДата();  
	СоздатьИзмеренияПланировщика();
	ОбновитьПериодОтображенияПланировщика(); 
	ЗаполнитьЖурналЗаписей(); 
КонецПроцедуры



&НаСервере
Процедура ОбновитьПериодОтображенияПланировщика()

	Начало = НачалоДня(Дата) + 9 * 3600;
	Конец = НачалоДня(Дата) + 19 * 3600; 
	Планировщик.ТекущиеПериодыОтображения.Очистить();
	Планировщик.ТекущиеПериодыОтображения.Добавить(Начало, Конец); 
	Планировщик.АвтоМинимальнаяВысотаСтроки = Ложь;
	Планировщик.АвтоМинимальнаяШиринаКолонки = Ложь;
	Планировщик.МинимальнаяШиринаКолонки = 20;
	Планировщик.МинимальнаяВысотаСтроки = 5; 
	
КонецПроцедуры // ОбновитьПериодОтображенияПланировщика()

&НаСервере
Процедура СоздатьИзмеренияПланировщика()
	Измерение = Планировщик.Измерения.Добавить("Сотрудник");
	Выборка = Справочники.Сотрудники.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		ЗначениеИзмерения = Измерение.Элементы.Добавить(Выборка.Ссылка);
	    ЗначениеИзмерения.Текст = Выборка.Наименование + Символы.ПС + Выборка.Должность;
		ЗначениеИзмерения.ЦветРамки = WebЦвета.Синий;
	КонецЦикла;
КонецПроцедуры // ()

&НаСервере
Процедура ЗаполнитьЖурналЗаписей()
	Планировщик.Элементы.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Запись.Проведен КАК Проведен,
		|	Запись.Дата КАК Дата,
		|	Запись.МедицинскийЦентр КАК МедицинскийЦентр,
		|	Запись.Сотрудник КАК Сотрудник,
		|	ПРЕДСТАВЛЕНИЕ(Запись.Услуга) КАК Услуга,
		|	Запись.Длительность КАК Длительность,
		|	Запись.Сумма КАК Сумма,
		|	Запись.Клиент.Телефон КАК КлиентТелефон,
		|	Запись.Комментарий КАК Комментарий,
		|	Запись.ДатаОкончания КАК ДатаОкончания,
		|	Запись.Ссылка КАК Ссылка,
		|	Запись.Клиент КАК Клиент,
		|	Запись.Цвет КАК Цвет
		|ИЗ
		|	Документ.Запись КАК Запись
		|ГДЕ
		|	Запись.Проведен
		|	И Запись.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания";  
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Дата));
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗначенияИзмерений = Новый Соответствие;
		ЗначенияИзмерений.Вставить("Сотрудник", Выборка.Сотрудник); 
		
		МассивСтрок = Новый Массив;
		ЖирныйШрифт = Новый Шрифт(,,Истина);
		
		ПредставлениеКлиента = Строка(Выборка.Клиент) + ", " + Выборка.КлиентТелефон;
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(ПредставлениеКлиента, ЖирныйШрифт));
		МассивСтрок.Добавить(Символы.ПС);
		МассивСтрок.Добавить(Выборка.Услуга);
		МассивСтрок.Добавить(Символы.ПС);
		Если ЗначениеЗаполнено(Выборка.Комментарий) Тогда
			МассивСтрок.Добавить("--" + Выборка.Комментарий);	
		КонецЕсли;		
		ЭлементПланировщика = Планировщик.Элементы.Добавить(Выборка.Дата, Выборка.ДатаОкончания); 
		ЭлементПланировщика.ЗначенияИзмерений = Новый ФиксированноеСоответствие(ЗначенияИзмерений); 
		ЭлементПланировщика.Значение = Выборка.Ссылка;
		ЭлементПланировщика.Текст = Новый ФорматированнаяСтрока(МассивСтрок);
		Цвет = Выборка.Цвет.Получить();
		Если Цвет = Неопределено Тогда
			Цвет = WebЦвета.Белый;
		КонецЕсли;
		ЭлементПланировщика.ЦветФона = Цвет;
	КонецЦикла;
КонецПроцедуры // ЗаполнитьЖурналЗаписей()

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ОбновитьПериодОтображенияПланировщика();
	ЗаполнитьЖурналЗаписей();
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередСозданием(Элемент, Начало, Конец, ЗначенияИзмерений, Текст, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь; 
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Дата", Начало);
	ЗначенияЗаполнения.Вставить("ДатаОкончания", Конец);
	ЗначенияЗаполнения.Вставить("Сотрудник", ЗначенияИзмерений["Сотрудник"]);
	
	СтруктураПараметров = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Документ.Запись.Форма.ФормаДокумента", СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Изменение_Запись" Тогда
		ЗаполнитьЖурналЗаписей();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередНачаломРедактирования(Элемент, НовыйЭлемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыделенныеЭлементы = Элемент.ВыделенныеЭлементы;
	
	ЭлементПланировщика = ВыделенныеЭлементы[0]; 
	СтруктураПараметров = Новый Структура("Ключ", ЭлементПланировщика.Значение);
	ОткрытьФорму("Документ.Запись.Форма.ФормаДокумента", СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПриОкончанииРедактирования(Элемент, НовыйЭлемент, ОтменаРедактирования)
		
	ВыделенныеЭлементы = Элемент.ВыделенныеЭлементы;
	ЭлементПланировщика = ВыделенныеЭлементы[0]; 
	
	ЗначенияРеквизитов = Новый Структура;
	ЗначенияРеквизитов.Вставить("Дата", ЭлементПланировщика.Начало);
	ЗначенияРеквизитов.Вставить("ДатаОкончания", ЭлементПланировщика.Конец);
	ЗначенияРеквизитов.Вставить("Сотрудник", ЭлементПланировщика.ЗначенияИзмерений["Сотрудник"]); 
	ЗначенияРеквизитов.Вставить("ТекущаяЗапись",ЭлементПланировщика.Значение); 
	Если Не ЗаписьВозможна(ЗначенияРеквизитов) Тогда
		ОтменаРедактирования = Истина;
		ОбщегоНазначенияКлиент.СообщитьПользователю("Запись на данное время невозможна!");
		Возврат;
	КонецЕсли;
	ОбновитьДанныеЗаписи(ЭлементПланировщика.Значение, ЗначенияРеквизитов);
КонецПроцедуры 

&НаСервереБезКонтекста
Процедура ОбновитьДанныеЗаписи(Запись, ЗначенияРеквизитов)
	ОбъектЗаписи = Запись.ПолучитьОбъект();
	ЕстьИзменения = Ложь;
	Для каждого Реквизит Из ЗначенияРеквизитов Цикл
		Если Реквизит.Ключ = "ТекущаяЗапись" Тогда
			Продолжить;
		КонецЕсли;
		Если ОбъектЗаписи[Реквизит.Ключ] <> Реквизит.Значение Тогда
			ЕстьИзменения = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если ЕстьИзменения Тогда
		ЗаполнитьЗначенияСвойств(ОбъектЗаписи, ЗначенияРеквизитов); 
		ОбъектЗаписи.Длительность = (ОбъектЗаписи.ДатаОкончания - ОбъектЗаписи.Дата) / 60;
    	ОбъектЗаписи.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
КонецПроцедуры // () 

&НаСервереБезКонтекста
Функция ЗаписьВозможна(СтруктураДанныхЗаписи)
	Возврат Документы.Запись.ЗаписьНаВыделенноеВремяВозможна(СтруктураДанныхЗаписи);	
КонецФункции // ()

&НаКлиенте
Процедура ПланировщикПриСменеТекущегоПериодаОтображения(Элемент, ТекущиеПериодыОтображения, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("ЗаполнитьЖурналЗаписейКлиент",5,Ложь)
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЖурналЗаписейКлиент()

	ЗаполнитьЖурналЗаписей();	

КонецПроцедуры






